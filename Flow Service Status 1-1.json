[
    {
        "id": "1b1451612f5fd856",
        "type": "tab",
        "label": "Service Status 1.1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e5afa592dff8585b",
        "type": "inject",
        "z": "1b1451612f5fd856",
        "name": "Periodic Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "7c893331855e1e5f",
                "b6a3057758e79b45",
                "7e053f1c8c6d1d30",
                "540999c158b72cfc",
                "e197ae0bd409a9f3",
                "f4622d74452acba5"
            ]
        ]
    },
    {
        "id": "7c893331855e1e5f",
        "type": "http request",
        "z": "1b1451612f5fd856",
        "name": "Check KTBCS Website HTTP",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "http://ktbcs.xyz",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 400,
        "y": 320,
        "wires": [
            [
                "bca13aa8313f2d5b"
            ]
        ]
    },
    {
        "id": "bca13aa8313f2d5b",
        "type": "function",
        "z": "1b1451612f5fd856",
        "name": "Check HTTP Response KTBCS",
        "func": "const expected_string = \"<title>KTBCS - Professional Technology Consulting</title>\";\nmsg.payload = msg.payload.includes(expected_string);\n\nlet d = new Date();\nlet yyyy = d.getFullYear();\nlet mm = String(d.getMonth() + 1).padStart(2, '0');\nlet dd = String(d.getDate()).padStart(2, '0');\nlet hh = String(d.getHours()).padStart(2, '0');\nlet min = String(d.getMinutes()).padStart(2, '0');\nmsg.last_updated = `${yyyy}-${mm}-${dd} ${hh}:${min}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 320,
        "wires": [
            [
                "ad2787d4ba4f5600",
                "49b99cdfd5a6fbb0"
            ]
        ]
    },
    {
        "id": "ad2787d4ba4f5600",
        "type": "ui_led",
        "z": "1b1451612f5fd856",
        "order": 1,
        "group": "bad3f62a9debe649",
        "width": "",
        "height": "",
        "label": "KTBCS HTTP Status",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "KTBCS HTTP Status",
        "x": 1020,
        "y": 340,
        "wires": []
    },
    {
        "id": "544208ac5a4f82f2",
        "type": "debug",
        "z": "1b1451612f5fd856",
        "name": "debug synology",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 800,
        "wires": []
    },
    {
        "id": "b6a3057758e79b45",
        "type": "http request",
        "z": "1b1451612f5fd856",
        "name": "Check NAS Website",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "http://100.114.180.102:5000/#/signin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 380,
        "y": 820,
        "wires": [
            [
                "069ec1b80ca1244e"
            ]
        ]
    },
    {
        "id": "069ec1b80ca1244e",
        "type": "function",
        "z": "1b1451612f5fd856",
        "name": "Check Response NAS",
        "func": "const expected_string = 'content=\"KTBMES-NAS-01';\nmsg.payload = msg.payload.includes(expected_string);\n\nlet d = new Date();\nlet yyyy = d.getFullYear();\nlet mm = String(d.getMonth() + 1).padStart(2, '0');\nlet dd = String(d.getDate()).padStart(2, '0');\nlet hh = String(d.getHours()).padStart(2, '0');\nlet min = String(d.getMinutes()).padStart(2, '0');\nmsg.last_updated = `${yyyy}-${mm}-${dd} ${hh}:${min}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 820,
        "wires": [
            [
                "544208ac5a4f82f2",
                "c137e9fc7c6c4f9e"
            ]
        ]
    },
    {
        "id": "c137e9fc7c6c4f9e",
        "type": "ui_led",
        "z": "1b1451612f5fd856",
        "order": 7,
        "group": "b988ac6b76bee669",
        "width": "",
        "height": "",
        "label": "KTBMES-NAS-01 Status",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "KTBMES-NAS-01 Status",
        "x": 1030,
        "y": 840,
        "wires": []
    },
    {
        "id": "49b99cdfd5a6fbb0",
        "type": "debug",
        "z": "1b1451612f5fd856",
        "name": "debug HTTP KTBCS",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 300,
        "wires": []
    },
    {
        "id": "7e053f1c8c6d1d30",
        "type": "http request",
        "z": "1b1451612f5fd856",
        "name": "Check KTBCS Website HTTPS",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "http://ktbcs.xyz",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 410,
        "y": 460,
        "wires": [
            [
                "da9cc271ac9f999c"
            ]
        ]
    },
    {
        "id": "da9cc271ac9f999c",
        "type": "function",
        "z": "1b1451612f5fd856",
        "name": "Check HTTPS Response KTBCS",
        "func": "const expected_string = \"<title>KTBCS - Professional Technology Consulting</title>\";\nmsg.payload = msg.payload.includes(expected_string);\n\nlet d = new Date();\nlet yyyy = d.getFullYear();\nlet mm = String(d.getMonth() + 1).padStart(2, '0');\nlet dd = String(d.getDate()).padStart(2, '0');\nlet hh = String(d.getHours()).padStart(2, '0');\nlet min = String(d.getMinutes()).padStart(2, '0');\nmsg.last_updated = `${yyyy}-${mm}-${dd} ${hh}:${min}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 460,
        "wires": [
            [
                "13b66a33c8e29fc3",
                "ca0efb723ab25b53"
            ]
        ]
    },
    {
        "id": "13b66a33c8e29fc3",
        "type": "ui_led",
        "z": "1b1451612f5fd856",
        "order": 1,
        "group": "bad3f62a9debe649",
        "width": "",
        "height": "",
        "label": "KTBCS HTTPS Status",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "KTBCS HTTPS Status",
        "x": 1020,
        "y": 480,
        "wires": []
    },
    {
        "id": "ca0efb723ab25b53",
        "type": "debug",
        "z": "1b1451612f5fd856",
        "name": "debug HTTPS KTBCS",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 440,
        "wires": []
    },
    {
        "id": "540999c158b72cfc",
        "type": "http request",
        "z": "1b1451612f5fd856",
        "name": "Check SkinnerEditorial HTTP",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "http://skinnereditorial.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 400,
        "y": 580,
        "wires": [
            [
                "18e554c557964ea0"
            ]
        ]
    },
    {
        "id": "18e554c557964ea0",
        "type": "function",
        "z": "1b1451612f5fd856",
        "name": "Check HTTP Response SKINNER",
        "func": "const expected_string = \"<title>Skinner Editorial Portfolio</title>\";\nmsg.payload = msg.payload.includes(expected_string);\n\nlet d = new Date();\nlet yyyy = d.getFullYear();\nlet mm = String(d.getMonth() + 1).padStart(2, '0');\nlet dd = String(d.getDate()).padStart(2, '0');\nlet hh = String(d.getHours()).padStart(2, '0');\nlet min = String(d.getMinutes()).padStart(2, '0');\nmsg.last_updated = `${yyyy}-${mm}-${dd} ${hh}:${min}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 580,
        "wires": [
            [
                "64a98385d0e9fe8b",
                "3c315ddc54925f78"
            ]
        ]
    },
    {
        "id": "64a98385d0e9fe8b",
        "type": "ui_led",
        "z": "1b1451612f5fd856",
        "order": 4,
        "group": "3e5457864f2b9335",
        "width": "",
        "height": "",
        "label": "SKINNER HTTP Status",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "SKINNER HTTP Status",
        "x": 1030,
        "y": 600,
        "wires": []
    },
    {
        "id": "3c315ddc54925f78",
        "type": "debug",
        "z": "1b1451612f5fd856",
        "name": "debug HTTP SKINNER",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 560,
        "wires": []
    },
    {
        "id": "e197ae0bd409a9f3",
        "type": "http request",
        "z": "1b1451612f5fd856",
        "name": "Check SkinnerEditorial HTTPS",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "https://skinnereditorial.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 410,
        "y": 700,
        "wires": [
            [
                "ce9f55a1352a4799"
            ]
        ]
    },
    {
        "id": "ce9f55a1352a4799",
        "type": "function",
        "z": "1b1451612f5fd856",
        "name": "Check HTTPS Response SKINNER",
        "func": "const expected_string = \"<title>Skinner Editorial Portfolio</title>\";\nmsg.payload = msg.payload.includes(expected_string);\n\nlet d = new Date();\nlet yyyy = d.getFullYear();\nlet mm = String(d.getMonth() + 1).padStart(2, '0');\nlet dd = String(d.getDate()).padStart(2, '0');\nlet hh = String(d.getHours()).padStart(2, '0');\nlet min = String(d.getMinutes()).padStart(2, '0');\nmsg.last_updated = `${yyyy}-${mm}-${dd} ${hh}:${min}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 700,
        "wires": [
            [
                "78a312baf76c12e5",
                "934b789d1c6f983c"
            ]
        ]
    },
    {
        "id": "78a312baf76c12e5",
        "type": "ui_led",
        "z": "1b1451612f5fd856",
        "order": 4,
        "group": "3e5457864f2b9335",
        "width": "",
        "height": "",
        "label": "SKINNER HTTPS Status",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "SKINNER HTTPS Status",
        "x": 1030,
        "y": 720,
        "wires": []
    },
    {
        "id": "934b789d1c6f983c",
        "type": "debug",
        "z": "1b1451612f5fd856",
        "name": "debug HTTPS SKINNER",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 680,
        "wires": []
    },
    {
        "id": "722e24b454134903",
        "type": "ui_text",
        "z": "1b1451612f5fd856",
        "group": "e5e0b78ae74c9903",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "HTTP Row Header",
        "label": "HTTP",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1010,
        "y": 180,
        "wires": []
    },
    {
        "id": "25f1ca4eb0c6d629",
        "type": "ui_text",
        "z": "1b1451612f5fd856",
        "group": "e5e0b78ae74c9903",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "HTTPS Row Header",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1020,
        "y": 220,
        "wires": []
    },
    {
        "id": "f4622d74452acba5",
        "type": "function",
        "z": "1b1451612f5fd856",
        "name": "Get Time String",
        "func": "// Get current time and format it as \"YYYY-MM-DD hh:mm\"\nconst now = new Date();\nconst year = now.getFullYear();\nconst month = String(now.getMonth() + 1).padStart(2, '0');\nconst day = String(now.getDate()).padStart(2, '0');\nconst hours = String(now.getHours()).padStart(2, '0');\nconst minutes = String(now.getMinutes()).padStart(2, '0');\n\nconst formattedTime = `${year}-${month}-${day} ${hours}:${minutes}`;\n\n// Set the formatted time to msg.payload for Node-RED output\nmsg.payload = formattedTime;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 900,
        "wires": [
            [
                "b634491e263463e1"
            ]
        ]
    },
    {
        "id": "b634491e263463e1",
        "type": "ui_text",
        "z": "1b1451612f5fd856",
        "group": "e5e0b78ae74c9903",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Last Checked Timestamp",
        "label": "Last Checked",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1030,
        "y": 900,
        "wires": []
    },
    {
        "id": "bad3f62a9debe649",
        "type": "ui_group",
        "name": "KTBCS",
        "tab": "3c6321fcf4b4ff91",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b988ac6b76bee669",
        "type": "ui_group",
        "name": "NAS",
        "tab": "3c6321fcf4b4ff91",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3e5457864f2b9335",
        "type": "ui_group",
        "name": "SKINNER",
        "tab": "3c6321fcf4b4ff91",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e5e0b78ae74c9903",
        "type": "ui_group",
        "name": "Row Label",
        "tab": "3c6321fcf4b4ff91",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c6321fcf4b4ff91",
        "type": "ui_tab",
        "name": "Service Status 1.1",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    }
]