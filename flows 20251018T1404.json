[
    {
        "id": "8ee21268964a9117",
        "type": "tab",
        "label": "Flow House Temps",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b50bd6e8837e1b4e",
        "type": "tab",
        "label": "Flow House Energy 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1ea66e6d203988a2",
        "type": "tab",
        "label": "Flow Battery Status",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "96e0d844962af7b8",
        "type": "tab",
        "label": "Check KTBCS Web Site",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "28784aa3ad94a46d",
        "type": "mqtt-broker",
        "name": "virtual-factory-online",
        "broker": "broker.virtualfactory.online",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "40227b344b006862",
        "type": "mqtt-broker",
        "name": "n-vutlr2",
        "broker": "n-vultr2",
        "port": "1883",
        "clientid": "ktbcs_mbp_node-red",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "390fe60d75a1b881",
        "type": "ui_tab",
        "name": "Shelly_Lab_01_Dashboard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "93dcc53b27ab17b1",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Home Environment",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "YYYY-MM-DD",
            "sizes": {
                "sx": 40,
                "sy": 40,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c412aa63298bbc14",
        "type": "ui_group",
        "name": "Shelly Lab Dashboard",
        "tab": "390fe60d75a1b881",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fca40b9c03543e27",
        "type": "ui_group",
        "name": "Switch:0 Guages",
        "tab": "390fe60d75a1b881",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "cfd079416572a5a1",
        "type": "ui_tab",
        "name": "SmartPlug_Dashboard",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0120b7d51f39933f",
        "type": "ui_group",
        "name": "Prod Guages",
        "tab": "cfd079416572a5a1",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "551fa096c4be3b6d",
        "type": "ui_group",
        "name": "Lab Charts",
        "tab": "cfd079416572a5a1",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d0e6d933f5c08d05",
        "type": "ui_group",
        "name": "EV Guages",
        "tab": "cfd079416572a5a1",
        "order": 6,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "83a2dcafa4b40858",
        "type": "ui_group",
        "name": "EV Charts",
        "tab": "cfd079416572a5a1",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b0aff1d8906e664d",
        "type": "ui_group",
        "name": "Prod Charts",
        "tab": "cfd079416572a5a1",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "342e62fb87e28291",
        "type": "ui_group",
        "name": "Lab Guages",
        "tab": "cfd079416572a5a1",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3a5f1daf4ffe31a3",
        "type": "mqtt-broker",
        "name": "ts-vultr",
        "broker": "vultr1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c105c0839a42fd56",
        "type": "ui_tab",
        "name": "House Temps All Up",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "78b7e4730c59e456",
        "type": "ui_group",
        "name": "PORCH",
        "tab": "c105c0839a42fd56",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dd0c7c3266a0ffe8",
        "type": "mqtt-broker",
        "name": "n-vultr2",
        "broker": "n-vultr2",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "83888350527d383f",
        "type": "ui_spacer",
        "z": "b50bd6e8837e1b4e",
        "name": "spacer",
        "group": "551fa096c4be3b6d",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "8f4d2aeef3774619",
        "type": "ui_spacer",
        "z": "b50bd6e8837e1b4e",
        "name": "spacer",
        "group": "551fa096c4be3b6d",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "2d1e005afbc8fffb",
        "type": "ui_spacer",
        "z": "b50bd6e8837e1b4e",
        "name": "spacer",
        "group": "551fa096c4be3b6d",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "3ddd0be7a77251e9",
        "type": "ui_spacer",
        "z": "b50bd6e8837e1b4e",
        "name": "spacer",
        "group": "b0aff1d8906e664d",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "87bd4b7b3e130415",
        "type": "ui_spacer",
        "z": "b50bd6e8837e1b4e",
        "name": "spacer",
        "group": "b0aff1d8906e664d",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "8c5ae03615e61911",
        "type": "ui_spacer",
        "z": "b50bd6e8837e1b4e",
        "name": "spacer",
        "group": "b0aff1d8906e664d",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "cae90d836e912bee",
        "type": "ui_spacer",
        "z": "b50bd6e8837e1b4e",
        "name": "spacer",
        "group": "83a2dcafa4b40858",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "aafd8c3aeead1a08",
        "type": "ui_spacer",
        "z": "b50bd6e8837e1b4e",
        "name": "spacer",
        "group": "83a2dcafa4b40858",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "b500fa9825e25cbc",
        "type": "ui_spacer",
        "z": "b50bd6e8837e1b4e",
        "name": "spacer",
        "group": "83a2dcafa4b40858",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "8c6f1104c304021b",
        "type": "ui_group",
        "name": "LIVING ROOM",
        "tab": "c105c0839a42fd56",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7134017ae4fdaba0",
        "type": "ui_group",
        "name": "PATIO",
        "tab": "c105c0839a42fd56",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "86187d38f38cfe12",
        "type": "ui_group",
        "name": "SHRINE ROOM",
        "tab": "c105c0839a42fd56",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c887baf6bfcb3bee",
        "type": "ui_tab",
        "name": "Battery Status",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a423bc63783b8656",
        "type": "ui_group",
        "name": "House Sensors Simple",
        "tab": "c887baf6bfcb3bee",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c6f770860e144f32",
        "type": "ui_group",
        "name": "Unknown Sensors",
        "tab": "c887baf6bfcb3bee",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f704b1b3e654081a",
        "type": "ui_group",
        "name": "House Sensors LED",
        "tab": "c887baf6bfcb3bee",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2eded491a2c9866d",
        "type": "ui_tab",
        "name": "Server Status",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f5c9154159481611",
        "type": "ui_group",
        "name": "Site",
        "tab": "2eded491a2c9866d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5eb1e0ea44caa899",
        "type": "ui_group",
        "name": "HTTP Status",
        "tab": "2eded491a2c9866d",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a7dac7d7234219c6",
        "type": "ui_group",
        "name": "HTTPS Status",
        "tab": "2eded491a2c9866d",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6b8cc6918a21c1f1",
        "type": "ui_spacer",
        "z": "96e0d844962af7b8",
        "name": "spacer",
        "group": "f5c9154159481611",
        "order": 4,
        "width": "6",
        "height": "2"
    },
    {
        "id": "1bb6585b7c6f4671",
        "type": "ui_spacer",
        "z": "96e0d844962af7b8",
        "name": "spacer",
        "group": "5eb1e0ea44caa899",
        "order": 3,
        "width": "6",
        "height": "2"
    },
    {
        "id": "cd20e0c6cc5f598b",
        "type": "ui_spacer",
        "z": "96e0d844962af7b8",
        "name": "spacer",
        "group": "5eb1e0ea44caa899",
        "order": 6,
        "width": "6",
        "height": "2"
    },
    {
        "id": "432c13b74da22006",
        "type": "ui_spacer",
        "z": "96e0d844962af7b8",
        "name": "spacer",
        "group": "a7dac7d7234219c6",
        "order": 3,
        "width": "6",
        "height": "2"
    },
    {
        "id": "b3e2a462dbb74c11",
        "type": "ui_spacer",
        "z": "96e0d844962af7b8",
        "name": "spacer",
        "group": "f5c9154159481611",
        "order": 2,
        "width": "6",
        "height": "2"
    },
    {
        "id": "2dba6006a2cfe138",
        "type": "ui_spacer",
        "z": "96e0d844962af7b8",
        "name": "spacer",
        "group": "a7dac7d7234219c6",
        "order": 6,
        "width": "6",
        "height": "2"
    },
    {
        "id": "4d7d1719cf82be59",
        "type": "ui_spacer",
        "z": "96e0d844962af7b8",
        "name": "spacer",
        "group": "f5c9154159481611",
        "order": 6,
        "width": "6",
        "height": "1"
    },
    {
        "id": "cd6d3a45bb062065",
        "type": "mqtt in",
        "z": "8ee21268964a9117",
        "name": "Vultr2_KTB-MBP_house_weather_sensors",
        "topic": "KTBMES/KTBCS_MBP/sensors/house_weather_sensors/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "dd0c7c3266a0ffe8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 400,
        "wires": [
            [
                "f51a21a873a414e5",
                "a574be7d910b84d1",
                "75055cc26c975fe0",
                "74fb63f3475d7227"
            ]
        ]
    },
    {
        "id": "f51a21a873a414e5",
        "type": "debug",
        "z": "8ee21268964a9117",
        "name": "MQTT Full Payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "a574be7d910b84d1",
        "type": "function",
        "z": "8ee21268964a9117",
        "name": "get_name_and_temperature",
        "func": "msg.payload = {\n    device_name: msg.payload.device_name,\n    temperature_F: msg.payload.temperature_F\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 400,
        "wires": [
            [
                "5d09a012967956b5",
                "7b0e7147d8caf07b"
            ]
        ]
    },
    {
        "id": "5d09a012967956b5",
        "type": "debug",
        "z": "8ee21268964a9117",
        "name": "Name and Temp",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 400,
        "wires": []
    },
    {
        "id": "7b0e7147d8caf07b",
        "type": "function",
        "z": "8ee21268964a9117",
        "name": "Parse_into_devices_temperature",
        "func": "if (msg.payload.device_name) {\n    let temp = msg.payload.temperature_F;  // Store temperature first\n    let deviceName = msg.payload.device_name.toUpperCase();  // Convert to uppercase\n    msg.payload = temp;\n\n    switch (deviceName) {\n        case \"LIVINGROOM-C\":\n            return [msg, null, null, null];\n        case \"PATIO-B\":\n            return [null, msg, null, null];\n        case \"SHRINEROOM-A\":\n            return [null, null, msg, null];\n        case \"PORCH-B\":\n            return [null, null, null, msg];\n    }\n}\nreturn null;\n\n",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 480,
        "wires": [
            [
                "868fa3219d5a72d5",
                "ef367e167a38817d",
                "46dbd35df068075a"
            ],
            [
                "868fa3219d5a72d5",
                "d007f7ae520f0afb",
                "6e58f245696a7067"
            ],
            [
                "868fa3219d5a72d5",
                "d7357c1a2a79320a",
                "aa4b259d94681a4e"
            ],
            [
                "868fa3219d5a72d5",
                "23a2d33409ea7811",
                "d0cee4895e404abc"
            ]
        ]
    },
    {
        "id": "868fa3219d5a72d5",
        "type": "debug",
        "z": "8ee21268964a9117",
        "name": "Gauge and Chart Data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 440,
        "wires": []
    },
    {
        "id": "ef367e167a38817d",
        "type": "ui_gauge",
        "z": "8ee21268964a9117",
        "name": "LIVING ROOM TEMP",
        "group": "8c6f1104c304021b",
        "order": 2,
        "width": 6,
        "height": 5,
        "gtype": "gage",
        "title": "Living Room Temperature",
        "label": "degrees F",
        "format": "{{value | number:0}}",
        "min": "32",
        "max": "90",
        "colors": [
            "#574ce6",
            "#55b4dd",
            "#f4aa0b"
        ],
        "seg1": "50",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 1060,
        "y": 520,
        "wires": []
    },
    {
        "id": "d007f7ae520f0afb",
        "type": "ui_gauge",
        "z": "8ee21268964a9117",
        "name": "PATIO-B TEMP",
        "group": "7134017ae4fdaba0",
        "order": 2,
        "width": 6,
        "height": 5,
        "gtype": "gage",
        "title": "Patio Temperature",
        "label": "degrees F",
        "format": "{{value | number:0}}",
        "min": "32",
        "max": "90",
        "colors": [
            "#574ce6",
            "#55b4dd",
            "#f4aa0b"
        ],
        "seg1": "50",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 620,
        "wires": []
    },
    {
        "id": "d7357c1a2a79320a",
        "type": "ui_gauge",
        "z": "8ee21268964a9117",
        "name": "SHRINE ROOM TEMP",
        "group": "86187d38f38cfe12",
        "order": 2,
        "width": 6,
        "height": 5,
        "gtype": "gage",
        "title": "Shrine Room Temperature",
        "label": "degrees F",
        "format": "{{value | number:0}}",
        "min": "32",
        "max": "90",
        "colors": [
            "#574ce6",
            "#55b4dd",
            "#f4aa0b"
        ],
        "seg1": "50",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 1060,
        "y": 700,
        "wires": []
    },
    {
        "id": "23a2d33409ea7811",
        "type": "ui_gauge",
        "z": "8ee21268964a9117",
        "name": "PORCH TEMP",
        "group": "78b7e4730c59e456",
        "order": 2,
        "width": 6,
        "height": 5,
        "gtype": "gage",
        "title": "Porch Temperature",
        "label": "degrees F",
        "format": "{{value | number:0}}",
        "min": "32",
        "max": "90",
        "colors": [
            "#574ce6",
            "#55b4dd",
            "#f4aa0b"
        ],
        "seg1": "50",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 780,
        "wires": []
    },
    {
        "id": "46dbd35df068075a",
        "type": "ui_chart",
        "z": "8ee21268964a9117",
        "name": "LIVING ROOM TEMP",
        "group": "8c6f1104c304021b",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Living Room Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Awaiting Data",
        "dot": false,
        "ymin": "32",
        "ymax": "90",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#a039f3",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#986ebf",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1060,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "d0cee4895e404abc",
        "type": "ui_chart",
        "z": "8ee21268964a9117",
        "name": "PORCH TEMP",
        "group": "78b7e4730c59e456",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Porch Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Awaiting Data",
        "dot": false,
        "ymin": "32",
        "ymax": "90",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#027acf",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#986ebf",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1040,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "aa4b259d94681a4e",
        "type": "ui_chart",
        "z": "8ee21268964a9117",
        "name": "SHRINE ROOM TEMP",
        "group": "86187d38f38cfe12",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "ShrineRoom Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Awaiting Data",
        "dot": false,
        "ymin": "32",
        "ymax": "90",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#f6e204",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#986ebf",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1060,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "6e58f245696a7067",
        "type": "ui_chart",
        "z": "8ee21268964a9117",
        "name": "PATIO-B TEMP",
        "group": "7134017ae4fdaba0",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Patio Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Awaiting Data",
        "dot": false,
        "ymin": "32",
        "ymax": "90",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0bf0f4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#986ebf",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1040,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "7e3548d8c3cc7bee",
        "type": "function",
        "z": "8ee21268964a9117",
        "name": "Parse_into_devices_humidity",
        "func": "if (msg.payload.device_name) {\n    let hum = msg.payload.humidity;  // Store temperature first\n    let deviceName = msg.payload.device_name.toUpperCase();  // Convert to uppercase\n    msg.payload = hum;\n\n    switch (deviceName) {\n        case \"LIVINGROOM-C\":\n            return [msg, null, null];\n        case \"PATIO-B\":\n            return [null, msg, null];\n        case \"SHRINEROOM-A\":\n            return [null, null, msg];\n    }\nreturn null\n}",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 940,
        "wires": [
            [
                "a5cbd764bfcff62c",
                "55a6450ae82db44f",
                "d7365f1afa081171"
            ],
            [
                "a5cbd764bfcff62c",
                "132cc1b3157edf0e",
                "6564d2d831bcd456"
            ],
            [
                "a5cbd764bfcff62c",
                "6f2a30e267ff2e42",
                "4598b91c32bc3f37"
            ]
        ]
    },
    {
        "id": "a5cbd764bfcff62c",
        "type": "debug",
        "z": "8ee21268964a9117",
        "name": "Humidity Data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 940,
        "wires": []
    },
    {
        "id": "75055cc26c975fe0",
        "type": "function",
        "z": "8ee21268964a9117",
        "name": "get_name_and_humidty",
        "func": "msg.payload = {\n    device_name: msg.payload.device_name,\n    humidity: msg.payload.humidity\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 600,
        "wires": [
            [
                "22370024fdd2409c",
                "7e3548d8c3cc7bee"
            ]
        ]
    },
    {
        "id": "22370024fdd2409c",
        "type": "debug",
        "z": "8ee21268964a9117",
        "name": "Name and Humidit",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 660,
        "wires": []
    },
    {
        "id": "55a6450ae82db44f",
        "type": "ui_gauge",
        "z": "8ee21268964a9117",
        "name": "LIVING ROOM HUMIDITY",
        "group": "8c6f1104c304021b",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Living Room Humidity",
        "label": "%",
        "format": "{{value | number:0}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#fc3503",
            "#09f505",
            "#d40ccd"
        ],
        "seg1": "50",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 1050,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d7365f1afa081171",
        "type": "ui_chart",
        "z": "8ee21268964a9117",
        "name": "LIVING ROOM HUMIDITY",
        "group": "8c6f1104c304021b",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "Living Room Humidity",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Awaiting Data",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#a039f3",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#986ebf",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1050,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "132cc1b3157edf0e",
        "type": "ui_gauge",
        "z": "8ee21268964a9117",
        "name": "PATIO HUMIDITY",
        "group": "7134017ae4fdaba0",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Patio Humidity",
        "label": "%",
        "format": "{{value | number:0}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#fc3503",
            "#09f505",
            "#d40ccd"
        ],
        "seg1": "50",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 1030,
        "y": 1100,
        "wires": []
    },
    {
        "id": "6564d2d831bcd456",
        "type": "ui_chart",
        "z": "8ee21268964a9117",
        "name": "PATIO HUMIDITY",
        "group": "7134017ae4fdaba0",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "Patio Humidity",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Awaiting Data",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#a039f3",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#986ebf",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "6f2a30e267ff2e42",
        "type": "ui_gauge",
        "z": "8ee21268964a9117",
        "name": "SHRINE ROOM HUMIDITY",
        "group": "86187d38f38cfe12",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Shrine Room Humidity",
        "label": "%",
        "format": "{{value | number:0}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#fc3503",
            "#09f505",
            "#d40ccd"
        ],
        "seg1": "50",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 1060,
        "y": 1200,
        "wires": []
    },
    {
        "id": "4598b91c32bc3f37",
        "type": "ui_chart",
        "z": "8ee21268964a9117",
        "name": "SHRINE ROOM HUMIDITY",
        "group": "86187d38f38cfe12",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "Shrine Room Humidity",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Awaiting Data",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#a039f3",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#986ebf",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1060,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "74fb63f3475d7227",
        "type": "function",
        "z": "8ee21268964a9117",
        "name": "get_timestamp",
        "func": "msg.payload = {\n    device_name: msg.payload.device_name,\n    time: msg.payload.time\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 40,
        "wires": [
            [
                "091e128ea86f5041",
                "daaaa924e25bdb2f"
            ]
        ]
    },
    {
        "id": "daaaa924e25bdb2f",
        "type": "debug",
        "z": "8ee21268964a9117",
        "name": "TimeStamp Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 40,
        "wires": []
    },
    {
        "id": "091e128ea86f5041",
        "type": "function",
        "z": "8ee21268964a9117",
        "name": "Parse_into_devices_temperature",
        "func": "if (msg.payload.device_name) {\n    let time = msg.payload.time.substring(0, 16)\n    let deviceName = msg.payload.device_name.toUpperCase();  // Convert to uppercase\n    msg.payload = time;\n\n    switch (deviceName) {\n        case \"LIVINGROOM-C\":\n            return [msg, null, null, null];\n        case \"PATIO-B\":\n            return [null, msg, null, null];\n        case \"SHRINEROOM-A\":\n            return [null, null, msg, null];\n        case \"PORCH-B\":\n            return [null, null, null, msg];\n    }\n}\nreturn null;\n\n",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 140,
        "wires": [
            [
                "5315179aaf5e98a5"
            ],
            [
                "ccd06abb1140c205"
            ],
            [
                "bc35449aa713d48e"
            ],
            [
                "4f9bad689c841267"
            ]
        ]
    },
    {
        "id": "5315179aaf5e98a5",
        "type": "ui_text",
        "z": "8ee21268964a9117",
        "group": "8c6f1104c304021b",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "LIVING ROOM TIME",
        "label": "Time Updated",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1060,
        "y": 60,
        "wires": []
    },
    {
        "id": "ccd06abb1140c205",
        "type": "ui_text",
        "z": "8ee21268964a9117",
        "group": "7134017ae4fdaba0",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "PATIO TIME",
        "label": "Time Updated",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1030,
        "y": 100,
        "wires": []
    },
    {
        "id": "bc35449aa713d48e",
        "type": "ui_text",
        "z": "8ee21268964a9117",
        "group": "86187d38f38cfe12",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "SHRINEROOM TIME",
        "label": "Time Updated",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1060,
        "y": 140,
        "wires": []
    },
    {
        "id": "4f9bad689c841267",
        "type": "ui_text",
        "z": "8ee21268964a9117",
        "group": "78b7e4730c59e456",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "PORCH TIME",
        "label": "Time Updated",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1040,
        "y": 180,
        "wires": []
    },
    {
        "id": "c31a7beaae9408f8",
        "type": "mqtt in",
        "z": "b50bd6e8837e1b4e",
        "name": "Vultr2 Smartplugs",
        "topic": "KTBMES/KTBCS_MBP/+/smartplugs/+/switch:0/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "40227b344b006862",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 720,
        "wires": [
            [
                "2465a8f05ff3f9d3",
                "99732b7ee9b9c974",
                "a1b1adf93d067845"
            ]
        ]
    },
    {
        "id": "2465a8f05ff3f9d3",
        "type": "debug",
        "z": "b50bd6e8837e1b4e",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 520,
        "wires": []
    },
    {
        "id": "99732b7ee9b9c974",
        "type": "function",
        "z": "b50bd6e8837e1b4e",
        "name": "Parse",
        "func": "// break out the input into (room, device, attribute, value)\n// output nodes:\n//  0 - office, lab, apower\n//  1 - office, lab, voltage\n//  2 - office, lab, current\n//  3 - office, lab, temperature\n//  4 - office, desk, apower\n//  5 - office, desk, voltage\n//  6 - office, desk, current\n//  7 - office, desk, temperature\n//  8 - garage, EV, apower\n//  9 - garage, EV, voltage\n// 10 - garage, EV, current\n// 11 - garage, EV, temperature\n\n// Split up the topic and ensure we have a valid topic string\nconst topicParts = msg.topic.split('/');\nif (topicParts.length < 3) {\n    node.warn(\"Invalid topic format: \" + msg.topic);\n    return null;\n}\n\n// topic string is expected to be in the format of\n//    [0]           [1]         [2]      [3]      [4]     [5]           [6]\n//   <root>/<publishing host>/<room>/smartplugs/<area>/switch:0/<attribute name>\n// and of course the payload is the value for the attribute\n\nconst room = topicParts[2]\nconst area = topicParts[4]\nconst attributeName = topicParts[topicParts.length - 1];\nconst attributeValue = String(msg.payload); // Convert payload to string\n\n// Helper function to create message array\nfunction createMessageArray(position, value) {\n    const arr = Array(12).fill(null);\n    if (value !== null) {\n        arr[position] = { payload: value };\n    }\n    return arr;\n}\n\nif (room === \"office\" && area === \"Shelly_Lab_01\") {\n    if (attributeName === \"apower\") {\n        return createMessageArray(0, attributeValue);\n    } else if (attributeName === \"voltage\") {\n        return createMessageArray(1, attributeValue);\n    } else if (attributeName === \"current\") {\n        return createMessageArray(2, attributeValue);\n    } else if (attributeName === \"tF\") {\n        return createMessageArray(3, attributeValue);\n    }\n} else if (room === \"office\" && area === \"Shelly_Prod\") {\n    if (attributeName === \"apower\") {\n        return createMessageArray(4, attributeValue);\n    } else if (attributeName === \"voltage\") {\n        return createMessageArray(5, attributeValue);\n    } else if (attributeName === \"current\") {\n        return createMessageArray(6, attributeValue);\n    } else if (attributeName === \"tF\") {\n        return createMessageArray(7, attributeValue);\n    }\n} else if (room === \"garage\" && area === \"Shelly_EV\") {\n    if (attributeName === \"apower\") {\n        return createMessageArray(8, attributeValue);\n    } else if (attributeName === \"voltage\") {\n        return createMessageArray(9, attributeValue);\n    } else if (attributeName === \"current\") {\n        return createMessageArray(10, attributeValue);\n    } else if (attributeName === \"tF\") {\n        return createMessageArray(11, attributeValue);\n    }\n} else {\n    node.warn(\"Invalid room/area: \" + room + \"/\" + area);\n    return null;\n}\n\n",
        "outputs": 12,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 720,
        "wires": [
            [
                "b84349b9cd72b98c",
                "f1f17e91bbe2b496"
            ],
            [
                "9f63c1451bd5dd0c",
                "e24464d3ff66bf59"
            ],
            [
                "7990acc998197040",
                "e083d4b5477c26e1"
            ],
            [
                "1225c10635a624e9",
                "2663b73a023ff730",
                "3c0c37e9a1539607"
            ],
            [
                "4f94ce9d930ef076",
                "f947b465c7d361f4"
            ],
            [
                "070a65a215845bab",
                "9e55496fdd586425"
            ],
            [
                "2c689bc9f5635a84",
                "02fa62a99fd902b5"
            ],
            [
                "fa8a378b66889024",
                "837ed2ddadf26079"
            ],
            [
                "05db8294bc166b3e",
                "3f27f3ea005f6aa5"
            ],
            [
                "a7a08e82789d3c8e",
                "bcb86da56d69ae23"
            ],
            [
                "49c7a78fafe3971b",
                "ba83bf783638b6ed"
            ],
            [
                "3b5ada2cc424a644",
                "22c2c051f5188e53"
            ]
        ]
    },
    {
        "id": "2663b73a023ff730",
        "type": "debug",
        "z": "b50bd6e8837e1b4e",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 560,
        "wires": []
    },
    {
        "id": "a1b1adf93d067845",
        "type": "function",
        "z": "b50bd6e8837e1b4e",
        "name": "Get TimeStamp",
        "func": "// Function to process MQTT messages and route based on device name\nfunction formatTimestamp(timestamp) {\n    console.log(\"Received timestamp:\", timestamp, \"Type:\", typeof timestamp);\n    \n    // Ensure we have a valid Date object\n    const date = new Date(Number(timestamp));\n    \n    if (isNaN(date.getTime())) {\n        console.log(\"Error: Invalid date created\");\n        return new Date().toLocaleString('en-US', {\n            timeZone: 'America/Los_Angeles',\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false\n        }).replace(/(\\d+)\\/(\\d+)\\/(\\d+),\\s+(\\d+:\\d+).*/, '$3-$1-$2 $4');\n    }\n    \n    return date.toLocaleString('en-US', {\n        timeZone: 'America/Los_Angeles',\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n    }).replace(/(\\d+)\\/(\\d+)\\/(\\d+),\\s+(\\d+:\\d+).*/, '$3-$1-$2  $4');\n}\n\n// Get the formatted timestamp from the message\nconst new_payload = formatTimestamp(msg.timestamp);\n\n// Split the topic into parts and get the device name (5th part)\nconst parts = msg.topic.split('/');\nconst device_name = parts[4] || '';\n\nlet output = [null, null, null];\n\n// Switch based on device_name\nmsg.payload = new_payload;\nswitch(device_name) {\n    case 'Shelly_Lab_01':\n        output[0] = msg;\n        break;\n    case 'Shelly_Prod':\n        output[1] = msg;\n        break;\n    case 'Shelly_EV':\n        output[2] = msg;\n        break;\n    // Default case already has all nulls\n}\n\n// Return the array of messages\nreturn output;\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 200,
        "wires": [
            [
                "a2ecdcf0bd6d3d1d",
                "71b9170a83532c6d",
                "b615f90b7fdab616"
            ],
            [
                "a2ecdcf0bd6d3d1d",
                "b21161b86f68d834",
                "be023f31286b79cd"
            ],
            [
                "a2ecdcf0bd6d3d1d",
                "7b27d4950ea8936a",
                "59c00a94c01062b0"
            ]
        ]
    },
    {
        "id": "a2ecdcf0bd6d3d1d",
        "type": "debug",
        "z": "b50bd6e8837e1b4e",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 60,
        "wires": []
    },
    {
        "id": "b615f90b7fdab616",
        "type": "ui_text",
        "z": "b50bd6e8837e1b4e",
        "group": "551fa096c4be3b6d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Lab_Chart_Time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 80,
        "wires": []
    },
    {
        "id": "b21161b86f68d834",
        "type": "ui_text",
        "z": "b50bd6e8837e1b4e",
        "group": "b0aff1d8906e664d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Prod_Chart_Time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 990,
        "y": 160,
        "wires": []
    },
    {
        "id": "7b27d4950ea8936a",
        "type": "ui_text",
        "z": "b50bd6e8837e1b4e",
        "group": "83a2dcafa4b40858",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "EV_Chart_Time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 240,
        "wires": []
    },
    {
        "id": "71b9170a83532c6d",
        "type": "ui_text",
        "z": "b50bd6e8837e1b4e",
        "group": "342e62fb87e28291",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Lab_Guage_Time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 990,
        "y": 120,
        "wires": []
    },
    {
        "id": "be023f31286b79cd",
        "type": "ui_text",
        "z": "b50bd6e8837e1b4e",
        "group": "0120b7d51f39933f",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Prod_Guage_Time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 990,
        "y": 200,
        "wires": []
    },
    {
        "id": "59c00a94c01062b0",
        "type": "ui_text",
        "z": "b50bd6e8837e1b4e",
        "group": "d0e6d933f5c08d05",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "EV_Guage_Time",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 280,
        "wires": []
    },
    {
        "id": "b84349b9cd72b98c",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "Lab aPower",
        "group": "342e62fb87e28291",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Lab aPower",
        "label": "Watts",
        "format": "{{value}}",
        "min": 0,
        "max": "200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "35",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "9f63c1451bd5dd0c",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "Lab Voltage",
        "group": "342e62fb87e28291",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Lab Voltage",
        "label": "Volts",
        "format": "{{value}}",
        "min": 0,
        "max": "130",
        "colors": [
            "#b09303",
            "#01b500",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "125",
        "diff": true,
        "className": "",
        "x": 970,
        "y": 460,
        "wires": []
    },
    {
        "id": "7990acc998197040",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "Lab Current",
        "group": "342e62fb87e28291",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Lab Current",
        "label": "Amps",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "12",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 540,
        "wires": []
    },
    {
        "id": "1225c10635a624e9",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "Lab Temperature",
        "group": "342e62fb87e28291",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Lab Temperature",
        "label": "degrees F",
        "format": "{{value}}",
        "min": "30",
        "max": "200",
        "colors": [
            "#0490fb",
            "#f9de58",
            "#ca3838"
        ],
        "seg1": "120",
        "seg2": "180",
        "diff": false,
        "className": "",
        "x": 990,
        "y": 620,
        "wires": []
    },
    {
        "id": "3f27f3ea005f6aa5",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "EV aPower",
        "group": "d0e6d933f5c08d05",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "EV aPower",
        "label": "Watts",
        "format": "{{value}}",
        "min": 0,
        "max": "200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "35",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 1060,
        "wires": []
    },
    {
        "id": "bcb86da56d69ae23",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "EV Voltage",
        "group": "d0e6d933f5c08d05",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "EV Voltage",
        "label": "Volts",
        "format": "{{value}}",
        "min": 0,
        "max": "130",
        "colors": [
            "#b09303",
            "#01b500",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "125",
        "diff": true,
        "className": "",
        "x": 970,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ba83bf783638b6ed",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "EV Current",
        "group": "d0e6d933f5c08d05",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "EV Current",
        "label": "Amps",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "12",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 1220,
        "wires": []
    },
    {
        "id": "22c2c051f5188e53",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "EV Temperature",
        "group": "d0e6d933f5c08d05",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "EV Temperature",
        "label": "degrees F",
        "format": "{{value}}",
        "min": 0,
        "max": "200",
        "colors": [
            "#0490fb",
            "#f9de58",
            "#ca3838"
        ],
        "seg1": "120",
        "seg2": "180",
        "diff": false,
        "className": "",
        "x": 980,
        "y": 1300,
        "wires": []
    },
    {
        "id": "4f94ce9d930ef076",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "Prod aPower",
        "group": "0120b7d51f39933f",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Prod aPower",
        "label": "Watts",
        "format": "{{value}}",
        "min": 0,
        "max": "200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "35",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 720,
        "wires": []
    },
    {
        "id": "070a65a215845bab",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "Prod Voltage",
        "group": "0120b7d51f39933f",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Prod Voltage",
        "label": "Volts",
        "format": "{{value}}",
        "min": 0,
        "max": "130",
        "colors": [
            "#b09303",
            "#01b500",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "125",
        "diff": true,
        "className": "",
        "x": 970,
        "y": 800,
        "wires": []
    },
    {
        "id": "2c689bc9f5635a84",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "Prod Current",
        "group": "0120b7d51f39933f",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Prod Current",
        "label": "Amps",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "12",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 880,
        "wires": []
    },
    {
        "id": "fa8a378b66889024",
        "type": "ui_gauge",
        "z": "b50bd6e8837e1b4e",
        "name": "Prod Temperature",
        "group": "0120b7d51f39933f",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Prod Temperature",
        "label": "degrees F",
        "format": "{{value}}",
        "min": 0,
        "max": "200",
        "colors": [
            "#0490fb",
            "#f9de58",
            "#ca3838"
        ],
        "seg1": "120",
        "seg2": "180",
        "diff": false,
        "className": "",
        "x": 990,
        "y": 960,
        "wires": []
    },
    {
        "id": "f1f17e91bbe2b496",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "Lab aPower",
        "group": "551fa096c4be3b6d",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Lab aPower",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "200",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e24464d3ff66bf59",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "Lab Voltage",
        "group": "551fa096c4be3b6d",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Lab Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "130",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffd500",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#ffff00"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "e083d4b5477c26e1",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "Lab Current",
        "group": "551fa096c4be3b6d",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Lab Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "15",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00ff40",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#ffff00"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "3c0c37e9a1539607",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "Lab Temperature",
        "group": "551fa096c4be3b6d",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Lab Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "30",
        "ymax": "150",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0055ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#ffff00"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "05db8294bc166b3e",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "EV aPower",
        "group": "83a2dcafa4b40858",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "EV aPower",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "200",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "a7a08e82789d3c8e",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "EV Voltage",
        "group": "83a2dcafa4b40858",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "EV Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "130",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffd500",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#ffff00"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "49c7a78fafe3971b",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "EV Current",
        "group": "83a2dcafa4b40858",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "EV Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "15",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00ff40",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#ffff00"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "3b5ada2cc424a644",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "EV Temperature",
        "group": "83a2dcafa4b40858",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "EV Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "30",
        "ymax": "150",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0055ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#ffff00"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 980,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "f947b465c7d361f4",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "Prod aPower",
        "group": "b0aff1d8906e664d",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Prod aPower",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "200",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "9e55496fdd586425",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "Prod Voltage",
        "group": "b0aff1d8906e664d",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Prod Voltage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "130",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffd500",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#ffff00"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "02fa62a99fd902b5",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "Prod Current",
        "group": "b0aff1d8906e664d",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Prod Current",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "15",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00ff40",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#ffff00"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "837ed2ddadf26079",
        "type": "ui_chart",
        "z": "b50bd6e8837e1b4e",
        "name": "Prod Temperature",
        "group": "b0aff1d8906e664d",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Prod Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "30",
        "ymax": "150",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#0055ff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#ffff00"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "a9509883a9be0ae9",
        "type": "mqtt in",
        "z": "1ea66e6d203988a2",
        "name": "Vultr2 sensors raw battery",
        "topic": "KTBMES/+/sensors/raw/+/battery_ok",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "40227b344b006862",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 460,
        "wires": [
            [
                "8dcf8b552ace98fd"
            ]
        ]
    },
    {
        "id": "8dcf8b552ace98fd",
        "type": "function",
        "z": "1ea66e6d203988a2",
        "name": "Parse Out Device ID",
        "func": "// Extract device ID from topic (5th element in path)\nconst topicParts = msg.topic.split('/');\nconst deviceId = topicParts[4]; // Index 4 for 5th element\n\nconst battery_ok = msg.payload\nlet note = \"No issues\"\n\n// Optional error checking\nif (typeof deviceId === 'undefined') {\n    note = \"Invalid topic format\";\n    node.error(note, msg);\n}\n\nif (typeof msg.payload !== 'number') {\n    note = \"Invalid payload type\";\n    node.error(note, msg);\n\n}\n\n// Create new payload object\nconst newPayload = {\n    time: new Date().toISOString(),\n    device_id: deviceId,\n    battery_ok: battery_ok,\n    note: note\n};\n\n// Create new message with clean payload\nconst newMsg = {\n    payload: newPayload,\n    // Optional: Carry through original properties\n    _msgid: msg._msgid,\n    topic: msg.topic\n};\n\n\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 320,
        "wires": [
            [
                "b196f56b42852b2c",
                "db94772040f670f2"
            ]
        ]
    },
    {
        "id": "b196f56b42852b2c",
        "type": "debug",
        "z": "1ea66e6d203988a2",
        "name": "Parsed Device_ID",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 260,
        "wires": []
    },
    {
        "id": "db94772040f670f2",
        "type": "function",
        "z": "1ea66e6d203988a2",
        "name": "device_id to device_name",
        "func": "// Device Name Lookup Function Node\nconst deviceLookup = {\n    \"37\": \"Living_Room\",\n    \"167\": \"Patio\",\n    \"164\": \"Porch\",\n    \"79\": \"Shrine_Room\"\n    // Add more mappings as needed\n};\n\n// Get device ID from incoming message\nconst deviceId = msg.payload.device_id;\nconst time = msg.payload.time;\nconst battery_ok = msg.payload.battery_ok;\n\n// Determine device name\nconst deviceName = deviceLookup[deviceId] || `UNKNOWN_${deviceId}`;\n\n// Create new payload\nconst newPayload = {\n    device_id: deviceId,\n    device_name: deviceName,\n    time: time,\n    battery_ok: battery_ok\n};\n\n// Optional: Add diagnostic info\nnewPayload.lookup_status = deviceLookup[deviceId] \n    ? \"Matched\" \n    : \"Fallback\";\n\n// Return enhanced message\nreturn {\n    payload: newPayload,\n    _msgid: msg._msgid,\n    topic: msg.topic\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 400,
        "wires": [
            [
                "d162b4fcb226e297",
                "8f60cd5358ee5d7b",
                "d1060e957ff1f754"
            ]
        ]
    },
    {
        "id": "d162b4fcb226e297",
        "type": "debug",
        "z": "1ea66e6d203988a2",
        "name": "Mapped Device_Name",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 320,
        "wires": []
    },
    {
        "id": "8f60cd5358ee5d7b",
        "type": "function",
        "z": "1ea66e6d203988a2",
        "name": "Parse_into_devices",
        "func": "let deviceName = msg.payload.device_name;\nlet batteryOk = msg.payload.battery_ok;\nlet status = null;\n\nif (batteryOk === 1) {\n    status = true;\n} else if (batteryOk === 0) {\n    status = false;\n} else {\n    status = null;\n}\n\nlet newMsg = {\n    \"payload\": status\n};\n\nswitch (deviceName) {\n    case \"Living_Room\":\n        return [newMsg, null, null, null, null];\n    case \"Patio\":\n        return [null, newMsg, null, null, null];\n    case \"Shrine_Room\":\n        return [null, null, newMsg, null, null];\n    case \"Porch\":\n        return [null, null, null, newMsg, null];\n    default:\n        return [null, null, null, null, newMsg];\n}\nreturn null;\n\n",
        "outputs": 5,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 400,
        "wires": [
            [
                "529e8634a00f2cab",
                "2c375891ebcd946e",
                "1a092f55f5d5d207"
            ],
            [
                "ca4c6e04643a2dd4",
                "739324b6124805f4",
                "2f8fbf8788d25d88"
            ],
            [
                "2a7071bd382a4648",
                "042b34f21dde3f9d",
                "6438502db157812f"
            ],
            [
                "2c013d7ae1fcceba",
                "9d6f3ec2012281c8",
                "3de688fdf1df5cae"
            ],
            [
                "a7d2a18eef244c92"
            ]
        ]
    },
    {
        "id": "529e8634a00f2cab",
        "type": "debug",
        "z": "1ea66e6d203988a2",
        "name": "Living_Room",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 240,
        "wires": []
    },
    {
        "id": "ca4c6e04643a2dd4",
        "type": "debug",
        "z": "1ea66e6d203988a2",
        "name": "Patio",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 280,
        "wires": []
    },
    {
        "id": "2a7071bd382a4648",
        "type": "debug",
        "z": "1ea66e6d203988a2",
        "name": "Shrine_Room",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 320,
        "wires": []
    },
    {
        "id": "2c013d7ae1fcceba",
        "type": "debug",
        "z": "1ea66e6d203988a2",
        "name": "Porch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 360,
        "wires": []
    },
    {
        "id": "a7d2a18eef244c92",
        "type": "debug",
        "z": "1ea66e6d203988a2",
        "name": "Unknown",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 400,
        "wires": []
    },
    {
        "id": "042b34f21dde3f9d",
        "type": "ui_text",
        "z": "1ea66e6d203988a2",
        "group": "a423bc63783b8656",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Shrine_Room",
        "label": "Shrine Room Battery",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1400,
        "y": 640,
        "wires": []
    },
    {
        "id": "2c375891ebcd946e",
        "type": "ui_text",
        "z": "1ea66e6d203988a2",
        "group": "a423bc63783b8656",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Living_Room",
        "label": "Living Room Battery",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1390,
        "y": 560,
        "wires": []
    },
    {
        "id": "2f8fbf8788d25d88",
        "type": "ui_text",
        "z": "1ea66e6d203988a2",
        "group": "a423bc63783b8656",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Patio",
        "label": "Patio Battery",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1630,
        "y": 600,
        "wires": []
    },
    {
        "id": "9d6f3ec2012281c8",
        "type": "ui_text",
        "z": "1ea66e6d203988a2",
        "group": "a423bc63783b8656",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Porch",
        "label": "Porch Battery",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1370,
        "y": 680,
        "wires": []
    },
    {
        "id": "1a092f55f5d5d207",
        "type": "ui_led",
        "z": "1ea66e6d203988a2",
        "order": 2,
        "group": "f704b1b3e654081a",
        "width": 0,
        "height": 0,
        "label": "Living Room Battery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#ffff00",
                "value": "null",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Living Room LED",
        "x": 1410,
        "y": 760,
        "wires": []
    },
    {
        "id": "739324b6124805f4",
        "type": "ui_led",
        "z": "1ea66e6d203988a2",
        "order": 3,
        "group": "f704b1b3e654081a",
        "width": 0,
        "height": 0,
        "label": "Patio Battery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#ffff00",
                "value": "null",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Patio Battery",
        "x": 1390,
        "y": 800,
        "wires": []
    },
    {
        "id": "6438502db157812f",
        "type": "ui_led",
        "z": "1ea66e6d203988a2",
        "order": 1,
        "group": "f704b1b3e654081a",
        "width": 0,
        "height": 0,
        "label": "Shrine Room Battery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#ffff00",
                "value": "null",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Shrine Room Battery",
        "x": 1420,
        "y": 840,
        "wires": []
    },
    {
        "id": "3de688fdf1df5cae",
        "type": "ui_led",
        "z": "1ea66e6d203988a2",
        "order": 4,
        "group": "f704b1b3e654081a",
        "width": 0,
        "height": 0,
        "label": "Porch Battery",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#ffff00",
                "value": "null",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Porch Battery",
        "x": 1400,
        "y": 880,
        "wires": []
    },
    {
        "id": "1bb68fec61e2e3a9",
        "type": "e-mail",
        "z": "1ea66e6d203988a2",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "karltbraun@gmail.com",
        "dname": "Email on bad battery",
        "x": 980,
        "y": 600,
        "wires": []
    },
    {
        "id": "d1060e957ff1f754",
        "type": "function",
        "z": "1ea66e6d203988a2",
        "name": "Alert on bad battery",
        "func": "if (msg.payload.battery_ok != 1) {\n    let subject = \"Battery Status Not OK\";\n    let line1 = \"Device: \" + msg.payload.device_name + \"\\n\";\n    let line2 = \"Battery Status: \" + msg.payload.battery_ok + \"\\n\";\n\n    let newMsg = {\n        \"topic\": subject,\n        \"payload\": line1 + line2\n    }\n    return newMsg;\n} else {\n    return null;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "96de5ff5234bcd4e",
        "type": "debug",
        "z": "1ea66e6d203988a2",
        "name": "Patio 2 debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 600,
        "wires": []
    },
    {
        "id": "inject1",
        "type": "inject",
        "z": "96e0d844962af7b8",
        "name": "Periodic Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "http1",
                "4e7ab2048c014149",
                "e78708cee091612d",
                "2a938a8ac237f7ff",
                "8c459e4ed8992348"
            ]
        ]
    },
    {
        "id": "http1",
        "type": "http request",
        "z": "96e0d844962af7b8",
        "name": "Check KTBCS Website HTTP",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "http://ktbcs.xyz",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 400,
        "y": 220,
        "wires": [
            [
                "function1"
            ]
        ]
    },
    {
        "id": "function1",
        "type": "function",
        "z": "96e0d844962af7b8",
        "name": "Check HTTP Response KTBCS",
        "func": "const expected_string = \"<title>KTBCS - Professional Technology Consulting</title>\";\nmsg.payload = msg.payload.includes(expected_string);\n\nlet d = new Date();\nlet yyyy = d.getFullYear();\nlet mm = String(d.getMonth() + 1).padStart(2, '0');\nlet dd = String(d.getDate()).padStart(2, '0');\nlet hh = String(d.getHours()).padStart(2, '0');\nlet min = String(d.getMinutes()).padStart(2, '0');\nmsg.last_updated = `${yyyy}-${mm}-${dd} ${hh}:${min}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 220,
        "wires": [
            [
                "ui-led1",
                "5cd6d3a4a5d0908d",
                "bb92c5b9e7eb4b7f"
            ]
        ]
    },
    {
        "id": "ui-led1",
        "type": "ui_led",
        "z": "96e0d844962af7b8",
        "order": 1,
        "group": "5eb1e0ea44caa899",
        "width": "",
        "height": "",
        "label": "KTBCS HTTP Status",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "KTBCS HTTP Status",
        "x": 1020,
        "y": 220,
        "wires": []
    },
    {
        "id": "37d6c26ae6c0de6e",
        "type": "debug",
        "z": "96e0d844962af7b8",
        "name": "debug synology",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 920,
        "wires": []
    },
    {
        "id": "4e7ab2048c014149",
        "type": "http request",
        "z": "96e0d844962af7b8",
        "name": "Check NAS Website",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "http://100.114.180.102:5000/#/signin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 380,
        "y": 960,
        "wires": [
            [
                "ecc50539f123c581"
            ]
        ]
    },
    {
        "id": "ecc50539f123c581",
        "type": "function",
        "z": "96e0d844962af7b8",
        "name": "Check Response NAS",
        "func": "const expected_string = 'content=\"KTBMES-NAS-01';\nmsg.payload = msg.payload.includes(expected_string);\n\nlet d = new Date();\nlet yyyy = d.getFullYear();\nlet mm = String(d.getMonth() + 1).padStart(2, '0');\nlet dd = String(d.getDate()).padStart(2, '0');\nlet hh = String(d.getHours()).padStart(2, '0');\nlet min = String(d.getMinutes()).padStart(2, '0');\nmsg.last_updated = `${yyyy}-${mm}-${dd} ${hh}:${min}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 960,
        "wires": [
            [
                "37d6c26ae6c0de6e",
                "e022825811d62202",
                "03757d52ae3bfce8"
            ]
        ]
    },
    {
        "id": "e022825811d62202",
        "type": "ui_led",
        "z": "96e0d844962af7b8",
        "order": 7,
        "group": "5eb1e0ea44caa899",
        "width": "",
        "height": "",
        "label": "KTBMES-NAS-01 Status",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "KTBMES-NAS-01 Status",
        "x": 930,
        "y": 960,
        "wires": []
    },
    {
        "id": "5cd6d3a4a5d0908d",
        "type": "debug",
        "z": "96e0d844962af7b8",
        "name": "debug HTTP KTBCS",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 180,
        "wires": []
    },
    {
        "id": "bb92c5b9e7eb4b7f",
        "type": "ui_text",
        "z": "96e0d844962af7b8",
        "group": "5eb1e0ea44caa899",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Last Updated HTTP KTBCS",
        "label": "Updated:",
        "format": "{{msg.last_updated}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1040,
        "y": 260,
        "wires": []
    },
    {
        "id": "03757d52ae3bfce8",
        "type": "ui_text",
        "z": "96e0d844962af7b8",
        "group": "5eb1e0ea44caa899",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Last Updated NAS",
        "label": "Updated:",
        "format": "{{msg.last_updated}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 910,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e78708cee091612d",
        "type": "http request",
        "z": "96e0d844962af7b8",
        "name": "Check KTBCS Website HTTPS",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "http://ktbcs.xyz",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 410,
        "y": 360,
        "wires": [
            [
                "3aab5ec4ec17988d"
            ]
        ]
    },
    {
        "id": "3aab5ec4ec17988d",
        "type": "function",
        "z": "96e0d844962af7b8",
        "name": "Check HTTPS Response KTBCS",
        "func": "const expected_string = \"<title>KTBCS - Professional Technology Consulting</title>\";\nmsg.payload = msg.payload.includes(expected_string);\n\nlet d = new Date();\nlet yyyy = d.getFullYear();\nlet mm = String(d.getMonth() + 1).padStart(2, '0');\nlet dd = String(d.getDate()).padStart(2, '0');\nlet hh = String(d.getHours()).padStart(2, '0');\nlet min = String(d.getMinutes()).padStart(2, '0');\nmsg.last_updated = `${yyyy}-${mm}-${dd} ${hh}:${min}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 360,
        "wires": [
            [
                "70bc1c28c4156e1a",
                "44a4c6ed71113515",
                "1b7945d5303fe330"
            ]
        ]
    },
    {
        "id": "70bc1c28c4156e1a",
        "type": "ui_led",
        "z": "96e0d844962af7b8",
        "order": 1,
        "group": "a7dac7d7234219c6",
        "width": "",
        "height": "",
        "label": "KTBCS HTTPS Status",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "KTBCS HTTPS Status",
        "x": 1020,
        "y": 360,
        "wires": []
    },
    {
        "id": "44a4c6ed71113515",
        "type": "debug",
        "z": "96e0d844962af7b8",
        "name": "debug HTTPS KTBCS",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 320,
        "wires": []
    },
    {
        "id": "1b7945d5303fe330",
        "type": "ui_text",
        "z": "96e0d844962af7b8",
        "group": "a7dac7d7234219c6",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Last Updated HTTPS KTBCS",
        "label": "Updated:",
        "format": "{{msg.last_updated}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1040,
        "y": 400,
        "wires": []
    },
    {
        "id": "f47cbe34c94b4638",
        "type": "ui_text_input",
        "z": "96e0d844962af7b8",
        "name": "KTBCS Siite",
        "label": "KTBCS",
        "tooltip": "",
        "group": "f5c9154159481611",
        "order": 1,
        "width": "6",
        "height": "2",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 990,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c69c9120b820d0c4",
        "type": "ui_text",
        "z": "96e0d844962af7b8",
        "group": "f5c9154159481611",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "NAS Site",
        "label": "NAS",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 880,
        "y": 880,
        "wires": []
    },
    {
        "id": "2a938a8ac237f7ff",
        "type": "http request",
        "z": "96e0d844962af7b8",
        "name": "Check SkinnerEditorial HTTP",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "http://skinnereditorial.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 400,
        "y": 560,
        "wires": [
            [
                "c82ecedcc721066b"
            ]
        ]
    },
    {
        "id": "c82ecedcc721066b",
        "type": "function",
        "z": "96e0d844962af7b8",
        "name": "Check HTTP Response SKINNER",
        "func": "const expected_string = \"<title>Skinner Editorial Portfolio</title>\";\nmsg.payload = msg.payload.includes(expected_string);\n\nlet d = new Date();\nlet yyyy = d.getFullYear();\nlet mm = String(d.getMonth() + 1).padStart(2, '0');\nlet dd = String(d.getDate()).padStart(2, '0');\nlet hh = String(d.getHours()).padStart(2, '0');\nlet min = String(d.getMinutes()).padStart(2, '0');\nmsg.last_updated = `${yyyy}-${mm}-${dd} ${hh}:${min}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 560,
        "wires": [
            [
                "b5f98061246c5fb2",
                "a64b573c4e1363af",
                "c7638652898febae"
            ]
        ]
    },
    {
        "id": "b5f98061246c5fb2",
        "type": "ui_led",
        "z": "96e0d844962af7b8",
        "order": 4,
        "group": "5eb1e0ea44caa899",
        "width": "",
        "height": "",
        "label": "SKINNER HTTP Status",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "SKINNER HTTP Status",
        "x": 1030,
        "y": 560,
        "wires": []
    },
    {
        "id": "a64b573c4e1363af",
        "type": "debug",
        "z": "96e0d844962af7b8",
        "name": "debug HTTP SKINNER",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 520,
        "wires": []
    },
    {
        "id": "c7638652898febae",
        "type": "ui_text",
        "z": "96e0d844962af7b8",
        "group": "5eb1e0ea44caa899",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Last Updated HTTP SKINNER",
        "label": "Updated:",
        "format": "{{msg.last_updated}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1050,
        "y": 600,
        "wires": []
    },
    {
        "id": "8c459e4ed8992348",
        "type": "http request",
        "z": "96e0d844962af7b8",
        "name": "Check SkinnerEditorial HTTPS",
        "method": "GET",
        "paytoqs": "ignore",
        "url": "https://skinnereditorial.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 410,
        "y": 700,
        "wires": [
            [
                "4c07e8d590b6c506"
            ]
        ]
    },
    {
        "id": "4c07e8d590b6c506",
        "type": "function",
        "z": "96e0d844962af7b8",
        "name": "Check HTTPS Response SKINNER",
        "func": "const expected_string = \"<title>Skinner Editorial Portfolio</title>\";\nmsg.payload = msg.payload.includes(expected_string);\n\nlet d = new Date();\nlet yyyy = d.getFullYear();\nlet mm = String(d.getMonth() + 1).padStart(2, '0');\nlet dd = String(d.getDate()).padStart(2, '0');\nlet hh = String(d.getHours()).padStart(2, '0');\nlet min = String(d.getMinutes()).padStart(2, '0');\nmsg.last_updated = `${yyyy}-${mm}-${dd} ${hh}:${min}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 700,
        "wires": [
            [
                "352a68a84e8e4b79",
                "02c925c8219cedf1",
                "eabaec9c08ea200d"
            ]
        ]
    },
    {
        "id": "352a68a84e8e4b79",
        "type": "ui_led",
        "z": "96e0d844962af7b8",
        "order": 4,
        "group": "a7dac7d7234219c6",
        "width": "",
        "height": "",
        "label": "SKINNER HTTPS Status",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "SKINNER HTTPS Status",
        "x": 1030,
        "y": 700,
        "wires": []
    },
    {
        "id": "02c925c8219cedf1",
        "type": "debug",
        "z": "96e0d844962af7b8",
        "name": "debug HTTPS SKINNER",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 660,
        "wires": []
    },
    {
        "id": "eabaec9c08ea200d",
        "type": "ui_text",
        "z": "96e0d844962af7b8",
        "group": "a7dac7d7234219c6",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Last Updated HTTPS SKINNER",
        "label": "Updated:",
        "format": "{{msg.last_updated}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1050,
        "y": 740,
        "wires": []
    },
    {
        "id": "8159dd98f3dfa90f",
        "type": "ui_text_input",
        "z": "96e0d844962af7b8",
        "name": "SkinnerEditorial Siite",
        "label": "SKINNER EDITORIAL",
        "tooltip": "",
        "group": "f5c9154159481611",
        "order": 3,
        "width": "6",
        "height": "2",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 1020,
        "y": 480,
        "wires": [
            []
        ]
    }
]